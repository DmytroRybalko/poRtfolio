[
["index.html", "Introduction to Data Analysis using R Chapter 1 Intro", " Introduction to Data Analysis using R Dmytro Rybalko 2019-11-16 Chapter 1 Intro Here is present my expirience in data analysis and visualization using R based on course Analyzing and Visualizing Data With Excel. I solved tasks from this course with next packages and libraries: - manipualation and trasformation data using dplyr and tidyr libraries from tidyverse package; - data visualization with ggplot2 library; - make excel-like readable reports with conditional formatting (color, icons, sparklines) using formattable, sparklines, htmlwidgets; - and finaly use bookdown for creating technical documents (like this) with R markdown. Solving the objectives of this course helped me better understand how to convert data for further analysis, how to create pretty good and informative charts and tables. Hope you can find something useful for yourself as you browse through this work :) "],
["data-first-overview.html", "Chapter 2 Data: first overview 2.1 What does the yearly total sales look like? 2.2 What percentage of the total revenue comes from the bikes category? 2.3 For the revenue by country, sort the countries from the one with highest revenue to lowest revenue", " Chapter 2 Data: first overview Scenario. You are the new marketing manager of an established Bicycle company. The company sells bicycles and accessories, such as clothing and other accessories to bikers in six countries. The company has just hired Lucy as its new Sales manager. You are tasked to introduce Lucy to the company, its product portfolio and its sales performance since 2011. To do this, you have asked Jack, the IT manager to prepare some data for you. Now, it’s your job to present this data in a compelling manner. Load necessary libraries: library(tidyverse) library(readxl) library(DT) library(RColorBrewer) Load raw data from Lab2Start.xlsx file: my_data &lt;- read_excel(&quot;./data/raw/raw_data.xlsx&quot;) Let’s view structure of our data: str(my_data) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 113036 obs. of 15 variables: ## $ Date : POSIXct, format: &quot;2013-11-26&quot; &quot;2015-11-26&quot; ... ## $ Year : num 2013 2015 2014 2016 2014 ... ## $ Customer ID : num 11019 11019 11039 11039 11046 ... ## $ Customer Age : num 19 19 49 49 47 47 47 47 35 35 ... ## $ Customer Gender : chr &quot;M&quot; &quot;M&quot; &quot;M&quot; &quot;M&quot; ... ## $ Country : chr &quot;Canada&quot; &quot;Canada&quot; &quot;Australia&quot; &quot;Australia&quot; ... ## $ State : chr &quot;British Columbia&quot; &quot;British Columbia&quot; &quot;New South Wales&quot; &quot;New South Wales&quot; ... ## $ Product Category: chr &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; ... ## $ Sub Category : chr &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; ... ## $ Product : chr &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; ... ## $ Order Quantity : num 8 8 23 20 4 5 4 2 22 21 ... ## $ Unit Cost : num 45 45 45 45 45 45 45 45 45 45 ... ## $ Unit Price : num 120 120 120 120 120 120 120 120 120 120 ... ## $ Cost : num 360 360 1035 900 180 ... ## $ Revenue : num 950 950 2401 2088 418 ... To see how our raw data looks like we use datatable() function from DT package: datatable(my_data[1:100, ], class = &quot;cell-border stripe nowrap&quot;, options = list(scrollX = T, dom = &#39;tp&#39;, autoWidth = TRUE, columnDefs = list(list(className = &#39;dt-body-center&#39;, targets = &quot;_all&quot;)))) %&gt;% formatDate(1, method = &quot;toDateString&quot;) The first thing you’d like to do is to present the data graphically. You do this by creating charts for the three groups of data you received from Jack, your IT manager. If you haven’t done so, give the chart a descriptive title. Your first solution should look like this (numbers may not be the same). Create three type of chart as showed above and answer the next questions. 2.1 What does the yearly total sales look like? my_data %&gt;% group_by(Year, `Product Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% ggplot(aes(x = Year, y = Total, color = reorder(`Product Category`, -Total))) + geom_line(size = 1.2) + geom_point(size = 2) + scale_y_continuous(limits = c(0, 15e6), expand = c(0, 0), labels = scales::dollar) + labs(title = &quot;Total Yearly Sales by Category&quot;, x = NULL, y = NULL, color = NULL) + scale_fill_brewer(palette = &quot;Dark2&quot;) + theme_classic() + theme(plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), panel.grid.major = element_line(colour = &quot;gray&quot;), panel.grid.minor = element_line(colour = &quot;gray&quot;, size = 0.1), #legend.title = element_text(face = &quot;bold&quot;, colour = &quot;black&quot;, size = 12), legend.text = element_text(size = 11, color = &quot;black&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Answer: Similar to the yearly bikes revenue 2.2 What percentage of the total revenue comes from the bikes category? my_data %&gt;% group_by(`Product Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% mutate(Prop = formatC(Total / sum(Total), digits = 2, format = &quot;f&quot;) %&gt;% as.numeric(), Percent = paste(Prop * 100, &quot;%&quot;), y_tick = cumsum(Prop) - Prop / 2) %&gt;% ggplot(aes(x = &quot;&quot;, y = Prop, fill = reorder(`Product Category`, -Prop))) + geom_bar(width = 1, stat = &quot;identity&quot;, colour = &quot;white&quot;, size = 0.7) + coord_polar(theta = &quot;y&quot;) + labs(title = &quot;Revenue by Category&quot;, x = NULL, y = NULL) + geom_text(aes(x = c(1.0, 1.2, 1.3), y = 1 - y_tick, label = Percent), size = 5) + scale_fill_brewer(palette = &quot;Set2&quot;) + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), legend.title = element_blank(), legend.text = element_text(size = 10, color = &quot;black&quot;), axis.text = element_blank(), axis.ticks = element_blank(), axis.line = element_blank()) Answer: 72% 2.3 For the revenue by country, sort the countries from the one with highest revenue to lowest revenue my_data %&gt;% group_by(Country) %&gt;% summarise(Total = sum(Revenue)) %&gt;% ggplot(aes(x = reorder(Country, Total), y = Total)) + geom_bar(stat = &quot;identity&quot;, width = .5, fill = &quot;tomato2&quot;) + scale_y_continuous(labels = scales::dollar, expand = c(0.01, 0)) + scale_x_discrete(expand = c(0.01, 0)) + coord_flip() + labs(title = &quot;Total revenue by country&quot;, y = NULL, x = NULL) + theme_classic() + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) "],
["deep-into-data.html", "Chapter 3 Deep into data 3.1 What is the total revenue for all the sales in the United States? 3.2 What is the total revenue for all the sales in the month of December? 3.3 What is the total revenue for all the sales for young adults age group? 3.4 What is the total revenue for all the bikes with frame size 62 for the customer age group seniors? 3.5 What is the total profit for United States sales in the month of October 2015, for customer age group adults?", " Chapter 3 Deep into data Scenario. While your first attempt to show the company’s performance to Lucy was not bad, clearly she has a lot more requirements than what you provided. She wants to know more about the year over year sales, sliced into different categories, sub-categories, and countries. She also wants to see additional information such as customer demographics. Jack has provided you with a different data source. This time the data has more than one hundred thousand rows. Before you can create additional reports to Lucy, first you need to prepare the data. Load libraries library(tidyverse) library(lubridate, warn.conflicts = F) library(formattable) library(DT) library(kableExtra) Load data for this Lab: my_data &lt;- readRDS(&quot;data/processing/data4week2.rds&quot;) 3.1 What is the total revenue for all the sales in the United States? ans_1 &lt;- my_data %&gt;% filter(Country == &quot;United States&quot;) %&gt;% summarise(`US Revenue` = sum(Revenue)) %&gt;% currency(digits = 0) Answer: $27,975,547 Now, you need to add several columns, derived from existing columns in the data. First, let’s add a Month column. Insert a new column to the left of the Customer ID column. my_data &lt;- my_data %&gt;% mutate(Month = month(Date)) %&gt;% select(Date:Year, Month, everything()) 3.2 What is the total revenue for all the sales in the month of December? my_data %&gt;% filter(Month == 12) %&gt;% summarise(`Total Revenue` = sum(Revenue)) %&gt;% currency(digits = 0) -&gt; ans_2 Answer: $9,086,931 Next, let’s add an “Age Group” column. Insert a new column to the left of the Customer Gender, and use formula to derive the age group from the Customer Age column. Let’s group the customers based on the following criteria: Youth (&lt;25); Young Adults (25-34); Adults (35-64); Seniors (&gt;64) Define function age_group() age_group &lt;- function(age) { if (age &lt; 25) { &quot;Youth&quot; } else if (age &gt; 24 &amp; age &lt; 35) { &quot;Young Adults&quot; } else if (age &gt; 34 &amp; age &lt; 65) { &quot;Adults&quot; } else { &quot;Seniors&quot; } } Add Age Group column my_data &lt;- my_data %&gt;% mutate(&#39;Age Group&#39; = map_chr(.$`Customer Age`, age_group)) %&gt;% select(Date:`Customer Age`, `Age Group`, everything()) 3.3 What is the total revenue for all the sales for young adults age group? my_data %&gt;% filter(`Age Group` == &quot;Young Adults&quot;) %&gt;% summarise(Total = sum(Revenue)) %&gt;% currency(digits = 0) -&gt; ans_3 Answer: $30,655,614 Now, let’s add a Frame Size column. Insert a new column to the left of the Order Quantity use formula to derive the frame size of a bicycle from the last two characters of the Product column, when the Product Category is Bikes, otherwise - NA. my_data &lt;- my_data %&gt;% mutate(&#39;Frame Size&#39; = ifelse(my_data$`Product Category` == &#39;Bikes&#39;, my_data$Product, NA) %&gt;% str_extract(&quot;\\\\d\\\\d$&quot;) %&gt;% as.numeric()) %&gt;% select(Date:Product, &#39;Frame Size&#39;, everything()) 3.4 What is the total revenue for all the bikes with frame size 62 for the customer age group seniors? ans_4 &lt;- my_data %&gt;% filter(`Product Category` == &quot;Bikes&quot;, `Frame Size` == 62, `Age Group` == &quot;Seniors&quot;) %&gt;% summarise(`Total Revenue` = sum(Revenue)) %&gt;% currency(digits = 0) Answer: $12,452 Let’s add a Profit column. Insert a new column to the right of the Revenue, and use formula to derive the Profit from both the Revenue and Cost columns. Show the Total for the Profit column. my_data &lt;- my_data %&gt;% mutate(Profit = Revenue - Cost) 3.5 What is the total profit for United States sales in the month of October 2015, for customer age group adults? ans_5 &lt;- my_data %&gt;% filter(Country == &quot;United States&quot;, Year == 2015, Month == 10, `Age Group` == &quot;Adults&quot;) %&gt;% summarise(`Total Profit` = sum(Profit)) %&gt;% currency(digits = 0) Answer: $138,419 "],
["aggregation-and-pivoting-data-part-1.html", "Chapter 4 Aggregation and pivoting data: part 1 4.1 Which year did the company start selling touring bikes? 4.2 Rank the states for Germany, from the highest to lowest revenue 4.3 Rank the states for Germany, from the highest to lowest revenue for year 2013 4.4 Which frame size sold the most? 4.5 Which age group has the lowest revenue? 4.6 Which country’s trend is the most different when compared to the other countries? 4.7 Which year does the Bikes category have the least sales? 4.8 What is the proportion of sales for Young Adults? 4.9 In this chart, you can clearly see the order of sales by frame size. Which frame size sold the least?", " Chapter 4 Aggregation and pivoting data: part 1 Scenario. Now that you have prepared the data, you can start to create pivot tables to aggregate the data and create some reports. From your conversation with Lucy, you know that she is interested in looking into the yearly sales data broken down by Countries, Product Categories and Age Groups. Load libraries library(tidyverse) library(knitr) library(scales) library(RColorBrewer) Load data for this lab: my_data &lt;- readRDS(&quot;./data/processing/data4week3.rds&quot;) str(my_data) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 113036 obs. of 19 variables: ## $ Date : POSIXct, format: &quot;2013-11-26&quot; &quot;2015-11-26&quot; ... ## $ Year : num 2013 2015 2014 2016 2014 ... ## $ Month : num 11 11 3 3 5 5 5 5 2 2 ... ## $ Customer ID : num 11019 11019 11039 11039 11046 ... ## $ Customer Age : num 19 19 49 49 47 47 47 47 35 35 ... ## $ Age Group : chr &quot;Youth&quot; &quot;Youth&quot; &quot;Adults&quot; &quot;Adults&quot; ... ## $ Customer Gender : chr &quot;M&quot; &quot;M&quot; &quot;M&quot; &quot;M&quot; ... ## $ Country : chr &quot;Canada&quot; &quot;Canada&quot; &quot;Australia&quot; &quot;Australia&quot; ... ## $ State : chr &quot;British Columbia&quot; &quot;British Columbia&quot; &quot;New South Wales&quot; &quot;New South Wales&quot; ... ## $ Product Category: chr &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; ... ## $ Sub Category : chr &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; ... ## $ Product : chr &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; ... ## $ Frame Size : num NA NA NA NA NA NA NA NA NA NA ... ## $ Order Quantity : num 8 8 23 20 4 5 4 2 22 21 ... ## $ Unit Cost : num 45 45 45 45 45 45 45 45 45 45 ... ## $ Unit Price : num 120 120 120 120 120 120 120 120 120 120 ... ## $ Cost : num 360 360 1035 900 180 ... ## $ Revenue : num 950 950 2401 2088 418 ... ## $ Profit : num 590 590 1366 1188 238 ... 4.1 Which year did the company start selling touring bikes? ans_1 &lt;- my_data %&gt;% arrange(Date) %&gt;% filter(`Sub Category` == &#39;Touring Bikes&#39;) %&gt;% select(Date, `Product Category`, `Sub Category`) kable(ans_1[1:10,]) Date Product Category Sub Category 2013-07-01 Bikes Touring Bikes 2013-07-01 Bikes Touring Bikes 2013-07-01 Bikes Touring Bikes 2013-07-02 Bikes Touring Bikes 2013-07-02 Bikes Touring Bikes 2013-07-03 Bikes Touring Bikes 2013-07-03 Bikes Touring Bikes 2013-07-03 Bikes Touring Bikes 2013-07-03 Bikes Touring Bikes 2013-07-04 Bikes Touring Bikes Answer: 2013 4.2 Rank the states for Germany, from the highest to lowest revenue my_data %&gt;% filter(Country == &#39;Germany&#39;) %&gt;% group_by(State) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ggplot(aes(x = reorder(State, Total), y = Total, fill = State)) + geom_bar(stat = &quot;identity&quot;, width = .6, show.legend = FALSE) + scale_y_continuous(labels = scales::dollar, expand = c(.01, 0)) + scale_x_discrete(expand = c(0.01, 0)) + coord_flip() + labs(title = &quot;Revenue by states&quot;, y = NULL, x = NULL) + theme_classic() + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) 4.3 Rank the states for Germany, from the highest to lowest revenue for year 2013 my_data %&gt;% filter(Country == &#39;Germany&#39;, Year == 2013) %&gt;% group_by(State) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ggplot(aes(x = reorder(State, Total), y = Total, fill = State)) + geom_bar(stat = &quot;identity&quot;, width = .65, show.legend = FALSE) + scale_y_continuous(labels = scales::dollar, expand = c(0.01,0)) + scale_x_discrete(expand = c(0.01,0)) + coord_flip() + labs(title = &quot;Revenue by states&quot;, x = NULL, y = NULL) + theme_classic() + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) 4.4 Which frame size sold the most? my_data %&gt;% filter(`Product Category` == &#39;Bikes&#39;) %&gt;% group_by(`Frame Size`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ggplot(aes(x = reorder(`Frame Size`, Total), y = Total)) + geom_bar(stat = &quot;identity&quot;, width = .5, fill = &quot;tomato2&quot;) + scale_y_continuous(labels = scales::dollar, expand = c(0.01, 0)) + coord_flip() + geom_text(aes(label = paste(&quot;$&quot;, prettyNum(Total, &quot;,&quot;))), hjust = 1.1, colour = &quot;black&quot;) + labs(title = &quot;Revenue by Frame Size&quot;, x = &quot;Frame Size&quot;, y = NULL) + theme_classic() + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) 4.5 Which age group has the lowest revenue? my_data %&gt;% group_by(`Age Group`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(Total) %&gt;% ggplot(aes(x = reorder(`Age Group`, -Total), y = Total, fill = `Age Group`)) + geom_bar(stat = &quot;identity&quot;, width = .5, show.legend = FALSE) + scale_y_log10(breaks = c(1e5, 1e6, 1e7, 2e7), expand = c(0.01, 0), limits = c(1e5, 2e7), oob = scales::squish, labels = scales::dollar) + scale_x_discrete(expand = c(0.01, 0)) + labs(title = &quot;Revenue by Age Group&quot;, x = NULL, y = NULL) + theme_classic() + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Now add a chart that shows yearly Sales by Country. Select a line chart to display the yearly trend. Make sure that the years are located in the X axis, the Revenue in the Y axis, and the Countries as categories. In this chart, you can clearly see the sales trend for each Country. Set common theme for line charts: line_theme &lt;- theme_classic() + theme(plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), panel.grid.major = element_line(colour = &quot;gray&quot;), panel.grid.minor = element_line(colour = &quot;gray&quot;, size = 0.1), legend.title = element_text(face = &quot;bold&quot;, colour = &quot;black&quot;, size = 12), legend.text = element_text(size = 11, color = &quot;black&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) 4.6 Which country’s trend is the most different when compared to the other countries? my_data %&gt;% group_by(Year, Country) %&gt;% summarise(Total = sum(Revenue)) %&gt;% ggplot(aes(x = Year, y = Total, color = reorder(Country, -Total))) + geom_line(size = 1.2) + geom_point(size = 2) + scale_y_continuous(breaks = seq(0, 6e6, by = 1e6), labels = scales::dollar, limits = c(0, 6.5e6), expand = c(0, 0)) + labs(title = &quot;Yearly Sales by Country&quot;, x = NULL, y = NULL, color = NULL) + line_theme Answer: Australia 4.7 Which year does the Bikes category have the least sales? my_data %&gt;% group_by(Year, `Product Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% ggplot(aes(x = Year, y = Total, color = reorder(`Product Category`,- Total))) + geom_line(size = 1.2) + geom_point(size = 2) + scale_y_continuous(limits = c(0, 15e6),labels = scales::dollar, expand = c(0, 0)) + labs(title = &quot;Yearly Sales by Category&quot;, x = NULL, y = NULL, color = NULL) + line_theme Answer: 2014 Add another pivot chart, this time for the pivot table that shows Revenue by Age Group. Select a pie chart to display the proportion of each Age Group. Add the labels to show percentage, formatted to two decimal points. ans_3 &lt;- my_data %&gt;% group_by(`Age Group`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(Total) %&gt;% mutate(Prop = formatC(Total / sum(Total), digits = 4, format = &quot;f&quot;) %&gt;% as.numeric(), Percent = paste(Prop * 100, &quot;%&quot;), y_tick = cumsum(Prop) - Prop / 2) ans_3$`Age Group` &lt;- factor(ans_3$`Age Group`, levels = ans_3$`Age Group`) kable(ans_3) Age Group Total Prop Percent y_tick Seniors 308042 0.0036 0.36 % 0.00180 Youth 11723199 0.1375 13.75 % 0.07235 Young Adults 30655614 0.3595 35.95 % 0.32085 Adults 42584153 0.4994 49.94 % 0.75030 In this chart, we can clearly see the proportion of sales for each Age Group. 4.8 What is the proportion of sales for Young Adults? ggplot(ans_3, aes(x = &quot;&quot;, y = Prop, fill = `Age Group`)) + geom_bar(width = 1, stat = &quot;identity&quot;, colour = &quot;white&quot;, size = 0.7) + coord_polar(theta = &quot;y&quot;) + labs(title = &quot;Sales by Age Group&quot;, x = NULL, y = NULL) + geom_text(aes(x = c(1.6, 1.2, 1.1, 1.1), y = 1 - y_tick, label = Percent), size = 7) + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, size = 15, hjust = 0.5), legend.title = element_blank(), legend.text = element_text(size = 10, color = &quot;black&quot;), axis.text = element_blank(), axis.ticks = element_blank()) + scale_fill_brewer(palette = &quot;Set1&quot;) Answer: 35.95 % Add another pivot chart, this time for the pivot table that shows Revenue by Frame size. Select a bar chart to display the order of sales by Frame size. Sort the Y axis to show the Frame size that has the most sales on the top. ans_4 &lt;- my_data %&gt;% filter(!is.na(`Frame Size`)) %&gt;% group_by(`Frame Size`) %&gt;% summarise(`Total Revenue` = sum(Revenue)) %&gt;% arrange(`Total Revenue`) 4.9 In this chart, you can clearly see the order of sales by frame size. Which frame size sold the least? ggplot(ans_4, aes(x = reorder(`Frame Size`, `Total Revenue`), y = `Total Revenue`)) + geom_bar(stat = &quot;identity&quot;, width = 0.7, show.legend = FALSE, fill = &quot;tomato2&quot;) + scale_y_continuous(labels = scales::dollar, expand = c(0.01, 0), limits = c(0, max(ans_4$`Total Revenue`)*1.05)) + coord_flip() + geom_text(aes(label = paste(&quot;$&quot;, prettyNum(`Total Revenue`, &quot;,&quot;))), hjust = 1.1, colour = &quot;black&quot;) + labs(x = &quot;Frame Size&quot;, y = NULL, title = &quot;Sales by Frame Size&quot;) + theme_classic() + theme(plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Answer: 54 "],
["aggregation-and-pivoting-data-part-2.html", "Chapter 5 Aggregation and pivoting data: part 2 5.1 A quick glance on the yearly sales by country shows that Australia has an unusual trend compared to the other countries. Which year does Australia have the least sales? 5.2 What is the percentage of Australia sales (of total sales) in the year that it has the least sales (previous question)? 5.3 Let’s filter the charts by Australia. What might be the cause of this trend? 5.4 For all the years that has all the three categories, which year does the Bikes has the least proportion? 5.5 What is the percentage of bikes sales (of total sales) in that year? 5.6 Which bike’s frame size is more popular for each gender? 5.7 In Australia, which age group has more sales revenue to females than to males? (Select two that apply)", " Chapter 5 Aggregation and pivoting data: part 2 Scenario. You have created several pivot tables and pivot charts for Lucy. Load libraries library(tidyverse) library(scales) library(RColorBrewer) Load data for this lab: my_data &lt;- readRDS(&quot;./data/processing/data4week3.rds&quot;) str(my_data) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 113036 obs. of 19 variables: ## $ Date : POSIXct, format: &quot;2013-11-26&quot; &quot;2015-11-26&quot; ... ## $ Year : num 2013 2015 2014 2016 2014 ... ## $ Month : num 11 11 3 3 5 5 5 5 2 2 ... ## $ Customer ID : num 11019 11019 11039 11039 11046 ... ## $ Customer Age : num 19 19 49 49 47 47 47 47 35 35 ... ## $ Age Group : chr &quot;Youth&quot; &quot;Youth&quot; &quot;Adults&quot; &quot;Adults&quot; ... ## $ Customer Gender : chr &quot;M&quot; &quot;M&quot; &quot;M&quot; &quot;M&quot; ... ## $ Country : chr &quot;Canada&quot; &quot;Canada&quot; &quot;Australia&quot; &quot;Australia&quot; ... ## $ State : chr &quot;British Columbia&quot; &quot;British Columbia&quot; &quot;New South Wales&quot; &quot;New South Wales&quot; ... ## $ Product Category: chr &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; ... ## $ Sub Category : chr &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; ... ## $ Product : chr &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; ... ## $ Frame Size : num NA NA NA NA NA NA NA NA NA NA ... ## $ Order Quantity : num 8 8 23 20 4 5 4 2 22 21 ... ## $ Unit Cost : num 45 45 45 45 45 45 45 45 45 45 ... ## $ Unit Price : num 120 120 120 120 120 120 120 120 120 120 ... ## $ Cost : num 360 360 1035 900 180 ... ## $ Revenue : num 950 950 2401 2088 418 ... ## $ Profit : num 590 590 1366 1188 238 ... So far everything has been well received by her. However, she would like to have easier ways to slice and dice the reports and charts herself. You sat down with Lucy, and come up with several different ways that Lucy could slice the data Year Country Customer Gender Age Group Product Category Sub Category Frame size In this Lab we continue to work with data from previous lab and with the same type of charts but will use other data subsets. Set common theme for line charts line_theme &lt;- theme_classic() + theme(plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5), panel.grid.major = element_line(colour = &quot;gray&quot;), panel.grid.minor = element_line(colour = &quot;gray&quot;, size = 0.1), legend.title = element_text(face = &quot;bold&quot;, colour = &quot;black&quot;, size = 12), legend.text = element_text(size = 11, color = &quot;black&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Set common theme for pie charts pie_theme &lt;- theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, size = 15, hjust = 0.5), #legend.title = element_blank(), legend.title = element_text(face = &quot;bold&quot;, colour = &quot;black&quot;, size = 12), legend.text = element_text(size = 11, color = &quot;black&quot;), axis.text = element_blank(), axis.ticks = element_blank()) 5.1 A quick glance on the yearly sales by country shows that Australia has an unusual trend compared to the other countries. Which year does Australia have the least sales? my_data %&gt;% group_by(Year, Country) %&gt;% summarise(Total = sum(Revenue)) %&gt;% ggplot(aes(x = Year, y = Total, color = reorder(Country, -Total))) + geom_line(size = 1.2) + geom_point(size = 2) + scale_y_continuous(breaks = seq(0, 7e6, by = 1e6), labels = scales::dollar, limits = c(0, 7e6), expand = c(0, 0)) + labs(x = &quot;Year&quot;, y = &quot;Total Revenue&quot;, color = &quot;Country&quot;, title = &quot;Yearly Sales by Country&quot;) + scale_colour_brewer(palette = &quot;Dark2&quot;) + line_theme Answer: 2011 Create an additional pivot chart to show Sales by Country using pie chart. Show percentages for each slice of the pie. Overall, Australia commands 25% of the company’s total sales. But in some of the years, this proportion changes. 5.2 What is the percentage of Australia sales (of total sales) in the year that it has the least sales (previous question)? my_data %&gt;% filter(Year == &quot;2011&quot;) %&gt;% group_by(Country) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% mutate(Prop = formatC(Total / sum(Total), digits = 3, format = &quot;f&quot;) %&gt;% as.numeric(), Percent = paste(Prop * 100, &quot;%&quot;), y_tick = cumsum(Prop) - Prop / 2) %&gt;% ggplot(aes(x = &quot;&quot;, y = Prop, fill = reorder(Country, -Prop))) + geom_bar(width = 1, stat = &quot;identity&quot;, colour = &quot;white&quot;, size = 0.7) + coord_polar(theta = &quot;y&quot;) + labs(title = &quot;Sales by Country&quot;, x = NULL, y = NULL, fill = NULL) + geom_text(aes(x = c(1.0, 1.1, 1.2, 1.25, 1.25, 1.3), y = 1 - y_tick, label = Percent), size = 5) + scale_fill_brewer(palette = &quot;Dark2&quot;) + pie_theme Answer: 28.2% 5.3 Let’s filter the charts by Australia. What might be the cause of this trend? my_data %&gt;% filter(Country == &quot;Australia&quot;, Year &gt; 2012) %&gt;% group_by(Year, `Product Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% ggplot(aes(x = Year, y = Total, color = reorder(`Product Category`, - Total))) + geom_line(size = 1.2) + geom_point(size = 2) + scale_y_continuous(labels = scales::dollar, limits = c(0, 5e6), expand = c(0, 0)) + labs(x = &quot;Year&quot;, y = &quot;Total Revenue&quot;, color = &quot; Product\\nCategory&quot;, title = &quot;Australia Sales by Category&quot;) + scale_colour_brewer(palette = &quot;Set2&quot;) + line_theme Answer: the sharp fluctuations of bicycle sales 5.4 For all the years that has all the three categories, which year does the Bikes has the least proportion? Answer: 2014 Based on your hypothesis (previous question), create an additional pivot chart to show Sales by Category using pie chart. Show percentages for each slice of the pie chart. Filter the charts by Australia and play around with the Year filter. Notice for different years, the changes in composition of Australia sales by Category. 5.5 What is the percentage of bikes sales (of total sales) in that year? my_data %&gt;% filter(Country == &quot;Australia&quot;, Year == 2014) %&gt;% group_by(`Product Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% mutate(Prop = formatC(Total / sum(Total), digits = 2, format = &quot;f&quot;) %&gt;% as.numeric(), Percent = paste(Prop * 100, &quot;%&quot;), y_tick = cumsum(Prop) - Prop / 2) %&gt;% ggplot(aes(x = &quot;&quot;, y = Prop, fill = `Product Category`)) + geom_bar(width = 1, stat = &quot;identity&quot;, colour = &quot;white&quot;, size = 0.7) + coord_polar(theta = &quot;y&quot;) + labs(title = paste(&quot;Proportion by Product Category for Australia in&quot;, 2014), x = NULL, y = NULL, fill = NULL) + geom_text(aes(x = c(1.2, 1.2, 1.3), y = 1 - y_tick, label = Percent), size = 9) + scale_fill_brewer(palette = &quot;Set2&quot;) + pie_theme Answer: 59% Next, create an additional pivot chart to show Sales by Customer Gender using pie chart. Show percentages for each slice of the pie. Overall, it is split evenly with 51%:49% of Male to Female ratio. 5.6 Which bike’s frame size is more popular for each gender? my_data %&gt;% filter(!is.na(`Frame Size`)) %&gt;% group_by(`Frame Size`, `Customer Gender`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% ggplot(aes(x = factor(`Frame Size`), y = Total, fill = factor(`Customer Gender`))) + geom_bar(stat = &quot;identity&quot;, position = position_dodge(0.6), width = 0.5) + scale_x_discrete(expand = c(0.01, 0)) + scale_y_continuous(labels = scales::dollar, expand = c(0.01, 0)) + labs(x = &quot;Frame Size&quot;, y = NULL, fill = &quot;Customer\\n Gender&quot;) + theme(panel.background = element_rect(fill = &quot;white&quot;), legend.title = element_text(colour = &quot;black&quot;, size = 10, face = &quot;bold&quot;), legend.text = element_text(colour = &quot;black&quot;, size = 10, face = &quot;bold&quot;), legend.position = c(.95, .93), legend.background = element_rect(color = &quot;black&quot;), axis.line = element_line(colour = &quot;black&quot;), axis.text = element_text(size = 10, colour = &quot;black&quot;), axis.title = element_text(size = 12)) Answer: Mail - 42; Femail - 38 What about Customer Gender vs Age Group? Right now the Sales by Age Group chart does not differentiate by Gender. Modify this chart to be a column chart. Show the Customer Gender side-by-side for each age group. Sort the Age Group appropriately. 5.7 In Australia, which age group has more sales revenue to females than to males? (Select two that apply) my_data %&gt;% filter(Country == &quot;Australia&quot;) %&gt;% group_by(`Age Group`, `Customer Gender`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% mutate(Prop = formatC(Total / sum(Total), digits = 3, format = &quot;f&quot;) %&gt;% as.numeric(), Percent = paste(Prop * 100, &quot;%&quot;)) %&gt;% ggplot(aes(x = `Age Group`, y = Prop, fill = `Customer Gender`)) + geom_bar(stat = &quot;identity&quot;, position = position_dodge(0.8), width = 0.75) + scale_x_discrete(expand = c(0.01, 0)) + scale_y_continuous(expand = c(0.01, 0), breaks = seq(0, .8, by = .1), labels = map_chr(seq(0, 80, by = 10) ,paste0, &quot;%&quot;)) + labs(x = NULL, y = &quot;Sales&quot;, fill = &quot;Customer Gender: &quot;) + geom_text(aes(label = Percent), vjust = 1.7, colour = &quot;black&quot;, position = position_dodge(0.8), size = 5) + theme(legend.position = &quot;top&quot;, panel.background = element_rect(fill = &quot;white&quot;), legend.title = element_text(colour = &quot;black&quot;, size = 12, face = &quot;bold&quot;), legend.background = element_rect(colour = &quot;black&quot;), legend.text = element_text(colour = &quot;black&quot;, size = 12, face = &quot;bold&quot;), axis.line = element_line(colour = &quot;black&quot;), axis.text = element_text(size = 12, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Answer: 1-Young Adults (25-34); 2-Adults (35-64) "],
["data-drill-down.html", "Chapter 6 Data: drill down 6.1 Which subcategory sold the most quantity? 6.2 Which subcategory has the most revenue? 6.3 What is the total margin for Australia in the year 2016? 6.4 Using the same filters, which category has the lowest margin? 6.5 Which sub category has the lowest margin? 6.6 Which product has the least margin?", " Chapter 6 Data: drill down Scenario. Lucy was impressed with the dashboard you created. With the dashboard, she is able to narrow down her interest. Specifically, she is interested with the sales in Australia. She would like to perform simple profitability analysis on the product category and sub-category, for specific year. Furthermore, she wants to have the option of going deeper to product level. Load libraries library(tidyverse) library(scales) library(knitr) Load data for Lab: my_data &lt;- readRDS(&quot;./data/processing/data4week3.rds&quot;) str(my_data) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 113036 obs. of 19 variables: ## $ Date : POSIXct, format: &quot;2013-11-26&quot; &quot;2015-11-26&quot; ... ## $ Year : num 2013 2015 2014 2016 2014 ... ## $ Month : num 11 11 3 3 5 5 5 5 2 2 ... ## $ Customer ID : num 11019 11019 11039 11039 11046 ... ## $ Customer Age : num 19 19 49 49 47 47 47 47 35 35 ... ## $ Age Group : chr &quot;Youth&quot; &quot;Youth&quot; &quot;Adults&quot; &quot;Adults&quot; ... ## $ Customer Gender : chr &quot;M&quot; &quot;M&quot; &quot;M&quot; &quot;M&quot; ... ## $ Country : chr &quot;Canada&quot; &quot;Canada&quot; &quot;Australia&quot; &quot;Australia&quot; ... ## $ State : chr &quot;British Columbia&quot; &quot;British Columbia&quot; &quot;New South Wales&quot; &quot;New South Wales&quot; ... ## $ Product Category: chr &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; ... ## $ Sub Category : chr &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; ... ## $ Product : chr &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; ... ## $ Frame Size : num NA NA NA NA NA NA NA NA NA NA ... ## $ Order Quantity : num 8 8 23 20 4 5 4 2 22 21 ... ## $ Unit Cost : num 45 45 45 45 45 45 45 45 45 45 ... ## $ Unit Price : num 120 120 120 120 120 120 120 120 120 120 ... ## $ Cost : num 360 360 1035 900 180 ... ## $ Revenue : num 950 950 2401 2088 418 ... ## $ Profit : num 590 590 1366 1188 238 ... Set common theme for charts: common_theme &lt;- theme_classic() + theme(axis.text.x = element_text(angle = 65, vjust = 1.0, hjust = 1.0), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Let’s start! Filter the pivot table for Australia and 2016, and answer the following questions. 6.1 Which subcategory sold the most quantity? ans_1 &lt;- my_data %&gt;% filter(Country == &quot;Australia&quot;, Year == 2016) %&gt;% group_by(`Sub Category`) %&gt;% summarise(Quantity = sum(`Order Quantity`)) %&gt;% arrange(desc(Quantity)) kable(ans_1) Sub Category Quantity Tires and Tubes 26829 Bottles and Cages 14038 Helmets 9460 Jerseys 4353 Caps 3743 Fenders 2522 Gloves 2238 Cleaners 2052 Hydration Packs 1196 Socks 1005 Road Bikes 818 Shorts 813 Vests 808 Mountain Bikes 362 Touring Bikes 317 Bike Racks 221 Bike Stands 144 Find answer on chart: ggplot(ans_1, aes(x = reorder(`Sub Category`, -Quantity), y = Quantity)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, fill=&quot;tomato2&quot;) + labs(x = &quot;Sub Category&quot;) + scale_y_log10(breaks = c(10^(0:5), 3e4), expand = c(0.01, 0.01)) + common_theme 6.2 Which subcategory has the most revenue? ans_2 &lt;- my_data %&gt;% filter(Country == &quot;Australia&quot;, Year == 2016) %&gt;% group_by(`Sub Category`) %&gt;% summarise(`Total Revenue` = sum(Revenue)) %&gt;% arrange(desc(`Total Revenue`)) ans_2 %&gt;% mutate_at(vars(`Total Revenue`), funs(scales::comma)) %&gt;% kable() Sub Category Total Revenue Road Bikes 1,395,135 Mountain Bikes 679,575 Touring Bikes 407,333 Helmets 277,482 Tires and Tubes 235,712 Jerseys 192,735 Bottles and Cages 75,314 Hydration Packs 55,097 Shorts 47,562 Fenders 46,352 Gloves 45,198 Vests 43,392 Caps 28,349 Bike Racks 22,015 Bike Stands 19,326 Cleaners 13,802 Socks 7,604 Find answer on chart: ggplot(ans_2, aes(x = reorder(`Sub Category`, -`Total Revenue`), y = `Total Revenue`)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, fill=&quot;tomato2&quot;) + labs(x = &quot;Sub Category&quot;) + scale_y_log10(breaks = 10^(0:6), labels = scales::dollar, expand = c(0.01, 0)) + common_theme Now add a field Margin with the value derived from the Profit and Revenue column. Format the field as percentage with two decimal places. HINT: Margin = Profit / Revenue 6.3 What is the total margin for Australia in the year 2016? ans_3 &lt;- my_data %&gt;% filter(Year == 2016) %&gt;% group_by(Country) %&gt;% summarise(`Margin` = sum(Profit) / sum(Revenue)) Find answer on chart: ggplot(ans_3, aes(x = reorder(Country, -Margin), y = Margin, fill = Country)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, show.legend = FALSE) + labs(x = &quot;Country&quot;) + scale_y_continuous(breaks = seq(0, .5, by = .1), expand = c(0.02, 0.0), limits = c(0, .5), labels = scales::percent) + geom_text(aes(label = paste(formatC(`Margin` * 100, digits = 1, format = &quot;f&quot;), &quot;%&quot;)), vjust = -0.5, colour = &quot;black&quot;, fontface = &quot;bold&quot;, size = 5) + theme_classic() + theme(axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.line.x = ) 6.4 Using the same filters, which category has the lowest margin? ans_4 &lt;- my_data %&gt;% filter(Country == &quot;Australia&quot;, Year == 2016) %&gt;% group_by(`Product Category`) %&gt;% summarise(`Margin` = sum(Profit) / sum(Revenue)) Find answer on chart: ggplot(ans_4, aes(x = reorder(`Product Category`, -`Margin`), y = `Margin`, fill = `Product Category`)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, show.legend = FALSE) + labs(x = &quot;Product Category&quot;) + scale_y_continuous(breaks = seq(0, .6, by = .1), expand = c(0.02, 0.0), limits = c(0, .6), labels = scales::percent) + geom_text(aes(label = paste(formatC(`Margin` * 100, digits = 2, format = &quot;f&quot;), &quot;%&quot;)), vjust = -0.5, colour = &quot;black&quot;, fontface = &quot;bold&quot;, size = 5) + theme_classic() + theme(axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;)) 6.5 Which sub category has the lowest margin? ans_5 &lt;- my_data %&gt;% filter(Country == &quot;Australia&quot;, Year == 2016) %&gt;% group_by(`Sub Category`) %&gt;% summarise(`Margin` = sum(Profit) / sum(Revenue)) %&gt;% arrange(Margin) ans_5 %&gt;% mutate_at(vars(Margin), funs(scales::percent)) %&gt;% kable() Sub Category Margin Caps 7.6% Jerseys 7.9% Touring Bikes 25.9% Road Bikes 26.2% Mountain Bikes 34.2% Hydration Packs 54.4% Bottles and Cages 54.8% Bike Racks 54.8% Tires and Tubes 54.9% Vests 55.3% Cleaners 55.4% Gloves 55.4% Shorts 55.6% Helmets 55.7% Bike Stands 56.0% Fenders 56.5% Socks 60.3% Find answer on chart: ggplot(ans_5, aes(x = reorder(`Sub Category`, `Margin`), y = `Margin`, fill = `Sub Category`)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, fill = &quot;tomato2&quot;) + labs(x = &quot;Sub Category&quot;) + scale_y_continuous(breaks = seq(0, .6, by = .1), expand = c(0.01, 0.0), labels = scales::percent) + common_theme 6.6 Which product has the least margin? ans_6 &lt;- my_data %&gt;% filter(Country == &quot;Australia&quot;, Year == 2016) %&gt;% group_by(Product, `Sub Category`, `Product Category`) %&gt;% summarise(Margin = formatC(sum(Profit) / sum(Revenue), digits = 2, format = &quot;f&quot;) %&gt;% as.numeric()) %&gt;% ungroup() %&gt;% arrange(Margin) %&gt;% top_n(-10) ans_6 %&gt;% mutate_at(vars(Margin), funs(scales::percent)) %&gt;% kable() Product Sub Category Product Category Margin Short-Sleeve Classic Jersey, M Jerseys Clothing 6% Long-Sleeve Logo Jersey, L Jerseys Clothing 7% Short-Sleeve Classic Jersey, S Jerseys Clothing 7% Short-Sleeve Classic Jersey, XL Jerseys Clothing 7% AWC Logo Cap Caps Clothing 8% Short-Sleeve Classic Jersey, L Jerseys Clothing 8% Long-Sleeve Logo Jersey, XL Jerseys Clothing 9% Long-Sleeve Logo Jersey, S Jerseys Clothing 10% Long-Sleeve Logo Jersey, M Jerseys Clothing 12% Road-350-W Yellow, 42 Road Bikes Bikes 20% Find answer on chart: ggplot(ans_6, aes(y = reorder(Product, -`Margin`), x = Margin), fill = Product) + geom_segment(aes(yend = Product), xend = 0, colour = &quot;grey50&quot;) + geom_point(size = 8, color = &quot;tomato2&quot;) + labs(y = &quot;Product Item&quot;) + scale_x_continuous(breaks = seq(0, .21, by = .05), labels = scales::percent, limits = c(0, .22), expand = c(0, 0), position = &quot;top&quot;) + theme_classic() + theme(axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) @import url(\"css/custom_lab6.css\"); "],
["reporting-tables.html", "Chapter 7 Reporting: tables 7.1 Helper functions for type 1 report 7.2 Helper functions for report type 2 7.3 Questions 7.4 Without applying any filter, which two years do the bikes category have negative growth? 7.5 Filter the report for Australia. Which year do the bikes category have the highest growth? 7.6 Keep the Australia filter. In the year that bikes sales have the highest growth (previous question), which sub category of bikes has the highest growth?", " Chapter 7 Reporting: tables Scenario. Lucy seems intrigued your presentation on Australia’s sales. Now, she wants to review the sales difference (growth) for Product Category and Sub Category between year 2015 and 2016. She wants to be able to filter the report by all the options available, including Customer Gender and Age Group. Load libraries library(tidyverse, warn.conflicts = F) library(scales) library(formattable) library(htmlwidgets) library(sparkline) Load data for this lab: my_data &lt;- readRDS(&quot;./data/processing/data4week3.rds&quot;) str(my_data) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 113036 obs. of 19 variables: ## $ Date : POSIXct, format: &quot;2013-11-26&quot; &quot;2015-11-26&quot; ... ## $ Year : num 2013 2015 2014 2016 2014 ... ## $ Month : num 11 11 3 3 5 5 5 5 2 2 ... ## $ Customer ID : num 11019 11019 11039 11039 11046 ... ## $ Customer Age : num 19 19 49 49 47 47 47 47 35 35 ... ## $ Age Group : chr &quot;Youth&quot; &quot;Youth&quot; &quot;Adults&quot; &quot;Adults&quot; ... ## $ Customer Gender : chr &quot;M&quot; &quot;M&quot; &quot;M&quot; &quot;M&quot; ... ## $ Country : chr &quot;Canada&quot; &quot;Canada&quot; &quot;Australia&quot; &quot;Australia&quot; ... ## $ State : chr &quot;British Columbia&quot; &quot;British Columbia&quot; &quot;New South Wales&quot; &quot;New South Wales&quot; ... ## $ Product Category: chr &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; &quot;Accessories&quot; ... ## $ Sub Category : chr &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; &quot;Bike Racks&quot; ... ## $ Product : chr &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; &quot;Hitch Rack - 4-Bike&quot; ... ## $ Frame Size : num NA NA NA NA NA NA NA NA NA NA ... ## $ Order Quantity : num 8 8 23 20 4 5 4 2 22 21 ... ## $ Unit Cost : num 45 45 45 45 45 45 45 45 45 45 ... ## $ Unit Price : num 120 120 120 120 120 120 120 120 120 120 ... ## $ Cost : num 360 360 1035 900 180 ... ## $ Revenue : num 950 950 2401 2088 418 ... ## $ Profit : num 590 590 1366 1188 238 ... In this Lab we’ll be review the sales difference (growth) for Product Category and Sub Category between year 2015 and 2016. So, we will create two type of reports. One with the sales for each year and the other with the % Change in Revenue from year to year. Each report is a cross-tabular format with Product Categories and Sub categories on the rows and year on the columns, with Sum of Revenue as the aggregate data. Also we will create chart representation for each report. Let’s start! First, create two reports just like on picture below For this task we’re going to use such packages as formattable and sparklines. Also we’ll include external css file for styling our tables. 7.1 Helper functions for type 1 report 7.1.1 Count totals for Product Category product_total &lt;- function(df) { df %&gt;% group_by(`Product Category`, Year) %&gt;% summarise(Total = sum(Revenue)) %&gt;% mutate(Margin = (Total - lag(Total)) / Total) %&gt;% ungroup() %&gt;% mutate(`Sub Category` = `Product Category`) %&gt;% select(`Product Category`, `Sub Category`, everything()) } Product Category Sub Category Year Total Margin Accessories Accessories 2013 3384215 NA Accessories Accessories 2014 4293592 0.2117987 Accessories Accessories 2015 3285954 -0.3066501 Accessories Accessories 2016 4154231 0.2090103 Bikes Bikes 2011 8964888 NA Bikes Bikes 2012 9175983 0.0230052 Bikes Bikes 2013 9858787 0.0692584 Bikes Bikes 2014 7611243 -0.2952926 Bikes Bikes 2015 14799083 0.4856950 Bikes Bikes 2016 11372150 -0.3013443 Clothing Clothing 2013 1997035 NA Clothing Clothing 2014 2247889 0.1115954 Clothing Clothing 2015 1938954 -0.1593308 Clothing Clothing 2016 2187004 0.1134200 7.1.2 List of unique product in Product Category uniq_product &lt;- function(df) { unique(df$`Product Category`) } my_data %&gt;% uniq_product() ## [1] &quot;Accessories&quot; &quot;Clothing&quot; &quot;Bikes&quot; 7.1.3 Count totals for Sub Category: sub_total &lt;- function(df) { df %&gt;% group_by(`Product Category`, `Sub Category`, Year) %&gt;% summarise(Total = sum(Revenue)) %&gt;% mutate(Margin = (Total - lag(Total)) / Total) %&gt;% ungroup() } Product Category Sub Category Year Total Margin Accessories Bike Racks 2013 112605 NA Accessories Bike Racks 2014 152966 0.2638560 Accessories Bike Racks 2015 107813 -0.4188085 Accessories Bike Racks 2016 144416 0.2534553 Accessories Bike Stands 2013 95396 NA Accessories Bike Stands 2014 83148 -0.1473036 Accessories Bike Stands 2015 88822 0.0638806 Accessories Bike Stands 2016 76709 -0.1579085 Accessories Bottles and Cages 2013 292535 NA Accessories Bottles and Cages 2014 422000 0.3067891 7.1.4 Prepare report_1 report_1 &lt;- function(df) { bind_rows(product_total(df), sub_total(df)) %&gt;% select(-Margin) %&gt;% group_by(`Product Category`, Year) %&gt;% spread(key = Year, value = Total) %&gt;% group_by(`Product Category`) %&gt;% arrange(desc(`2016`), .by_group = TRUE) %&gt;% ungroup() %&gt;% select(-`Product Category`) %&gt;% mutate_if(is.numeric, formattable::comma, digits = 0) } my_data %&gt;% report_1 ## # A tibble: 20 x 7 ## `Sub Category` `2011` `2012` `2013` ## &lt;chr&gt; &lt;S3: formattable&gt; &lt;S3: formattable&gt; &lt;S3: formattable&gt; ## 1 Accessories NA NA 3,384,215 ## 2 Helmets NA NA 1,285,031 ## 3 Tires and Tubes NA NA 1,033,740 ## 4 Bottles and Cages NA NA 292,535 ## 5 Fenders NA NA 284,577 ## 6 Hydration Packs NA NA 237,491 ## 7 Bike Racks NA NA 112,605 ## 8 Bike Stands NA NA 95,396 ## 9 Cleaners NA NA 42,840 ## 10 Bikes 8,964,888 9,175,983 9,858,787 ## 11 Road Bikes 6,766,618 6,993,130 4,836,352 ## 12 Mountain Bikes 2,198,270 2,182,853 3,732,841 ## 13 Touring Bikes NA NA 1,289,594 ## 14 Clothing NA NA 1,997,035 ## 15 Jerseys NA NA 956,093 ## 16 Shorts NA NA 447,464 ## 17 Gloves NA NA 191,818 ## 18 Vests NA NA 251,704 ## 19 Caps NA NA 117,068 ## 20 Socks NA NA 32,888 ## # ... with 3 more variables: `2014` &lt;S3: formattable&gt;, `2015` &lt;S3: ## # formattable&gt;, `2016` &lt;S3: formattable&gt; 7.1.5 Define function that makes sparklines in formattable object my_sparkline &lt;- function(x){ as.character( htmltools::as.tags( sparkline(x) # we can add any chart type! ) ) } 7.1.6 Make tibble with sparklines as html-widgets: sparkl_df &lt;- function(df) { report_1(df) %&gt;% nest(`2011`:`2016`, .key = &#39;Sparkl&#39;) %&gt;% mutate_at(&#39;Sparkl&#39;, map, as.numeric, my_sparkline) %&gt;% mutate_at(&#39;Sparkl&#39;, map, my_sparkline) } 7.1.7 Add sparklines objects to report_1: report_1_sparkl &lt;- function(df) { bind_cols(report_1(df), sparkl_df(df) %&gt;% select(Sparkl)) } my_data %&gt;% report_1_sparkl ## # A tibble: 20 x 8 ## `Sub Category` `2011` `2012` `2013` ## &lt;chr&gt; &lt;S3: formattable&gt; &lt;S3: formattable&gt; &lt;S3: formattable&gt; ## 1 Accessories NA NA 3,384,215 ## 2 Helmets NA NA 1,285,031 ## 3 Tires and Tubes NA NA 1,033,740 ## 4 Bottles and Cages NA NA 292,535 ## 5 Fenders NA NA 284,577 ## 6 Hydration Packs NA NA 237,491 ## 7 Bike Racks NA NA 112,605 ## 8 Bike Stands NA NA 95,396 ## 9 Cleaners NA NA 42,840 ## 10 Bikes 8,964,888 9,175,983 9,858,787 ## 11 Road Bikes 6,766,618 6,993,130 4,836,352 ## 12 Mountain Bikes 2,198,270 2,182,853 3,732,841 ## 13 Touring Bikes NA NA 1,289,594 ## 14 Clothing NA NA 1,997,035 ## 15 Jerseys NA NA 956,093 ## 16 Shorts NA NA 447,464 ## 17 Gloves NA NA 191,818 ## 18 Vests NA NA 251,704 ## 19 Caps NA NA 117,068 ## 20 Socks NA NA 32,888 ## # ... with 4 more variables: `2014` &lt;S3: formattable&gt;, `2015` &lt;S3: ## # formattable&gt;, `2016` &lt;S3: formattable&gt;, Sparkl &lt;list&gt; 7.1.8 Final table for the first report report_1_table &lt;- function(df) { formattable(report_1_sparkl(df), align = c(&quot;l&quot;, &quot;r&quot;, &quot;r&quot;, &quot;r&quot;, &quot;r&quot;, &quot;r&quot;, &quot;r&quot;), table.attr = &quot;class=\\&#39;my_table\\&#39;&quot;, list( area(, `2011`:`2016`) ~ color_tile(&quot;#FFFF00&quot;, &quot;#FF0000&quot;), `Sub Category` = formatter(&quot;span&quot;, style = x ~ ifelse(x %in% uniq_product(df), style(font.weight = &quot;bold&quot;), style(padding.left = &quot;0.25cm&quot;)) ) ) ) %&gt;% formattable::as.htmlwidget() %&gt;% htmltools::tagList() %&gt;% htmltools::attachDependencies(htmlwidgets:::widget_dependencies(&quot;sparkline&quot;,&quot;sparkline&quot;)) %&gt;% htmltools::browsable() } my_data %&gt;% report_1_table() 7.2 Helper functions for report type 2 7.2.1 Calculate changes in totals by year for product category report_2 &lt;- function(df) { bind_rows(product_total(df), sub_total(df)) %&gt;% select(-Total) %&gt;% group_by(`Product Category`, Year) %&gt;% spread(key = Year, value = Margin) %&gt;% ungroup() %&gt;% arrange(match(`Sub Category`, report_1(df)$`Sub Category`)) %&gt;% select(-`Product Category`, -`2011`) %&gt;% mutate_if(is.numeric, formattable::percent, digits = 1) } my_data %&gt;% report_2 ## # A tibble: 20 x 6 ## `Sub Category` `2012` `2013` `2014` ## &lt;chr&gt; &lt;S3: formattable&gt; &lt;S3: formattable&gt; &lt;S3: formattable&gt; ## 1 Accessories NA NA 21.2% ## 2 Helmets NA NA 21.1% ## 3 Tires and Tubes NA NA 22.7% ## 4 Bottles and Cages NA NA 30.7% ## 5 Fenders NA NA 18.0% ## 6 Hydration Packs NA NA 10.2% ## 7 Bike Racks NA NA 26.4% ## 8 Bike Stands NA NA -14.7% ## 9 Cleaners NA NA 26.2% ## 10 Bikes 2.3% 6.9% -29.5% ## 11 Road Bikes 3.2% -44.6% -60.3% ## 12 Mountain Bikes -0.7% 41.5% -25.1% ## 13 Touring Bikes NA NA 20.0% ## 14 Clothing NA NA 11.2% ## 15 Jerseys NA NA 15.4% ## 16 Shorts NA NA -2.7% ## 17 Gloves NA NA 23.4% ## 18 Vests NA NA -10.1% ## 19 Caps NA NA 27.5% ## 20 Socks NA NA 21.4% ## # ... with 2 more variables: `2015` &lt;S3: formattable&gt;, `2016` &lt;S3: ## # formattable&gt; 7.2.2 Final table for the second report report_2_table &lt;- function(df) { formattable(report_2(df), align = c(&quot;l&quot;, &quot;l&quot;, &quot;l&quot;, &quot;l&quot;, &quot;l&quot;, &quot;l&quot;), table.attr = &quot;class=\\&#39;my_table\\&#39;&quot;, list( area(, `2012`:`2016`) ~ formatter(&quot;span&quot;, style = x ~ style(color = ifelse(x &lt; 0 , &quot;red&quot;, &quot;green&quot;)), x ~ icontext(ifelse(x &lt; 0, &quot;arrow-down&quot;, &quot;arrow-up&quot;), formattable::percent(x, digits = 1))), `Sub Category` = formatter(&quot;span&quot;, style = x ~ ifelse(x %in% uniq_product(df), style(font.weight = &quot;bold&quot;), style(padding.left = &quot;0.25cm&quot;) ) ) ) ) } my_data %&gt;% report_2_table() Sub Category 2012 2013 2014 2015 2016 Accessories NA NA 21.2% -30.7% 20.9% Helmets NA NA 21.1% -30.3% 20.7% Tires and Tubes NA NA 22.7% -33.1% 22.5% Bottles and Cages NA NA 30.7% -48.0% 30.4% Fenders NA NA 18.0% -25.2% 17.6% Hydration Packs NA NA 10.2% -14.6% 10.4% Bike Racks NA NA 26.4% -41.9% 25.3% Bike Stands NA NA -14.7% 6.4% -15.8% Cleaners NA NA 26.2% -39.6% 26.3% Bikes 2.3% 6.9% -29.5% 48.6% -30.1% Road Bikes 3.2% -44.6% -60.3% 58.6% -62.9% Mountain Bikes -0.7% 41.5% -25.1% 46.6% -25.6% Touring Bikes NA NA 20.0% 16.9% 21.1% Clothing NA NA 11.2% -15.9% 11.3% Jerseys NA NA 15.4% -21.8% 15.7% Shorts NA NA -2.7% -0.4% -2.3% Gloves NA NA 23.4% -35.2% 23.9% Vests NA NA -10.1% 7.3% -11.1% Caps NA NA 27.5% -42.0% 27.5% Socks NA NA 21.4% -30.9% 21.2% 7.3 Questions 7.3.1 Without applying any filter, which year does the Accessories category have negative growth? Answer: 2015 7.3.2 Filter the reports for youth age group. Which two years do the accessories category have negative growth? Report 1 my_data %&gt;% filter(`Age Group` == &quot;Youth&quot;) %&gt;% report_1_table() Report 2 my_data %&gt;% filter(`Age Group` == &quot;Youth&quot;) %&gt;% report_2_table() Sub Category 2012 2013 2014 2015 2016 Accessories NA NA -7.8% 4.9% -8.9% Tires and Tubes NA NA 13.7% -18.0% 13.1% Helmets NA NA -16.6% 12.0% -18.3% Bottles and Cages NA NA 30.3% -45.9% 29.1% Fenders NA NA -39.2% 25.9% -37.9% Hydration Packs NA NA -106.0% 49.6% -110.6% Cleaners NA NA 15.1% -21.7% 15.9% Bike Stands NA NA -144.7% 57.6% -185.4% Bike Racks NA NA -53.4% 32.2% -44.9% Bikes -1.3% -8.9% -140.8% 72.8% -143.7% Road Bikes -0.9% -73.4% -127.8% 71.7% -142.6% Mountain Bikes -2.7% 41.8% -169.9% 75.2% -152.9% Touring Bikes NA NA -113.8% 69.6% -120.1% Clothing NA NA -92.8% 47.0% -95.0% Jerseys NA NA -59.1% 35.6% -59.6% Gloves NA NA 18.6% -25.5% 17.5% Caps NA NA 1.7% -5.1% 3.1% Shorts NA NA -612.6% 85.8% -661.4% Vests NA NA -246.9% 70.1% -245.8% Socks NA NA -9.9% 8.3% -16.4% Answer: 2014, 2016 7.4 Without applying any filter, which two years do the bikes category have negative growth? Answer: 2014, 2016 7.5 Filter the report for Australia. Which year do the bikes category have the highest growth? Report 1 my_data %&gt;% filter(Country == &quot;Australia&quot;) %&gt;% report_1_table() Report 2 my_data %&gt;% filter(Country == &quot;Australia&quot;) %&gt;% report_2_table() Sub Category 2012 2013 2014 2015 2016 Accessories NA NA 18.9% -26.7% 18.5% Helmets NA NA 18.5% -25.9% 18.0% Tires and Tubes NA NA 24.7% -36.3% 24.4% Bottles and Cages NA NA 29.6% -45.8% 28.8% Hydration Packs NA NA -11.7% 7.7% -12.0% Fenders NA NA 9.6% -13.0% 9.4% Bike Racks NA NA 60.9% -170.0% 60.3% Bike Stands NA NA -39.0% 24.9% -38.1% Cleaners NA NA 35.6% -58.2% 36.0% Bikes 1.1% 16.2% -84.2% 64.6% -88.5% Road Bikes 2.5% -4.6% -84.5% 64.6% -85.7% Mountain Bikes -2.1% 25.4% -126.4% 71.3% -139.0% Touring Bikes NA NA -11.3% 41.3% -13.7% Clothing NA NA -14.7% 11.7% -17.1% Jerseys NA NA -7.2% 4.6% -8.7% Shorts NA NA -35.0% 23.8% -36.3% Gloves NA NA 21.9% -33.3% 22.8% Vests NA NA -98.3% 51.1% -109.4% Caps NA NA 26.3% -39.4% 25.2% Socks NA NA 21.7% -29.7% 20.9% Answer: 2015 7.6 Keep the Australia filter. In the year that bikes sales have the highest growth (previous question), which sub category of bikes has the highest growth? Answer: Mounting Bikes, 71% "],
["reporting-hierarchical-chart.html", "Chapter 8 Reporting: hierarchical chart 8.1 Explore the sales composition of bikes category for each age group. Which age group does the composition (rank of sales) differ than the rest? 8.2 Now explore the sales composition of bikes category for each age group, for the Male customers. Which age group does the composition differ than the rest? 8.3 Clear all filters. Now, filter for the year 2016 and Germany. Rank the sales from the highest to lowest for the clothing category 8.4 Rank the sales from the highest to lowest for the clothing category. Keep the filter settings and add filter by male customers. 8.5 Rank the sales from the highest to lowest for the clothing category. Keep the filter settings and add filter by youth age group", " Chapter 8 Reporting: hierarchical chart Scenario. Upon reviewing the growth report you created, Lucy asked for a report that shows composition of Product Categories and Sub Categories based on certain filters, including Year, Country, Customer Gender, and Age Group. Specifically, Lucy wants to see the report visualized using a hierarchical chart. Load necessary libraries library(tidyverse) library(treemapify) library(RColorBrewer) library(knitr) library(scales) Load data for Lab7 my_data &lt;- readRDS(&quot;./data/processing/data4week3.rds&quot;) 8.1 Explore the sales composition of bikes category for each age group. Which age group does the composition (rank of sales) differ than the rest? ans_1 &lt;- my_data %&gt;% filter(`Product Category` == &quot;Bikes&quot;) %&gt;% group_by(`Age Group`, `Sub Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ungroup() ans_1 %&gt;% mutate_at(vars(Total), funs(scales::comma)) %&gt;% kable() Age Group Sub Category Total Adults Road Bikes 15,723,543 Young Adults Road Bikes 12,439,924 Adults Mountain Bikes 10,534,548 Young Adults Mountain Bikes 7,861,417 Youth Road Bikes 5,140,111 Adults Touring Bikes 4,078,076 Youth Mountain Bikes 2,661,311 Young Adults Touring Bikes 2,614,215 Youth Touring Bikes 593,930 Seniors Mountain Bikes 66,250 Seniors Road Bikes 59,483 Seniors Touring Bikes 9,326 Show answer on chart: ggplot(ans_1, aes(area = Total, fill = `Sub Category`, group = `Age Group`, label = `Age Group` )) + geom_treemap(colour = &quot;white&quot;, size = 2) + geom_treemap_text(colour = &quot;black&quot;, place = &quot;centre&quot;, grow = T, min.size = 3) + scale_fill_brewer(palette = &quot;Set2&quot;, labels = paste(ans_1$`Sub Category`, &#39;\\t&#39;)) + theme(legend.position = &quot;top&quot;, legend.title = element_blank(), legend.text = element_text(size = 14, face = &quot;bold&quot;)) Answer: Seniors (right upper corner) Now explore the sales composition of Bikes category for each Age Group for the Male customers. ans_2 &lt;- my_data %&gt;% filter(`Product Category` == &quot;Bikes&quot;, `Customer Gender` == &quot;M&quot;) %&gt;% group_by(`Age Group`, `Sub Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ungroup() ans_2 %&gt;% mutate_at(vars(Total), funs(scales::comma)) %&gt;% kable() Age Group Sub Category Total Adults Road Bikes 7,565,634 Young Adults Road Bikes 6,393,719 Adults Mountain Bikes 5,260,117 Young Adults Mountain Bikes 3,660,311 Youth Road Bikes 2,787,992 Adults Touring Bikes 2,028,869 Youth Mountain Bikes 1,406,305 Young Adults Touring Bikes 1,276,009 Youth Touring Bikes 330,496 Seniors Road Bikes 44,154 Seniors Mountain Bikes 41,447 Seniors Touring Bikes 4,563 8.2 Now explore the sales composition of bikes category for each age group, for the Male customers. Which age group does the composition differ than the rest? ggplot(ans_2, aes(area = Total, fill = `Sub Category`, group = `Sub Category`, label = `Age Group` )) + geom_treemap(colour = &quot;white&quot;, size = 2) + geom_treemap_text(colour = &quot;black&quot;, place = &quot;centre&quot;, grow = T, min.size = 3) + scale_fill_brewer(palette = &quot;Set2&quot;, labels = paste(ans_2$`Sub Category`, &#39;\\t&#39;)) + theme(legend.position = &quot;top&quot;, legend.title = element_blank(), legend.text = element_text(size = 14, face = &quot;bold&quot;)) Answer 2: The composition are the same across Age Group for Male customers. 8.3 Clear all filters. Now, filter for the year 2016 and Germany. Rank the sales from the highest to lowest for the clothing category ans_3 &lt;- my_data %&gt;% filter(Year == 2016, Country == &quot;Germany&quot;, `Product Category` == &quot;Clothing&quot;) %&gt;% group_by(`Sub Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ungroup() ans_3 %&gt;% mutate_at(vars(Total), funs(scales::comma)) %&gt;% kable() Sub Category Total Jerseys 121,186 Vests 25,190 Caps 20,441 Gloves 17,337 Shorts 6,066 Socks 3,646 Show answer on chart: ggplot(ans_3, aes(x = reorder(`Sub Category`, -Total), y = Total, fill = `Sub Category`)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, show.legend = FALSE) + labs(x = &quot;Sub Category&quot;) + scale_y_log10(breaks = c(1, 1e2, 1e3, 1e4, 2e4, 1e5), expand = c(0.02, 0.0), labels = scales::dollar) + theme_classic() + theme(axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;)) 8.4 Rank the sales from the highest to lowest for the clothing category. Keep the filter settings and add filter by male customers. ans_4 &lt;- my_data %&gt;% filter(Year == 2016, Country == &quot;Germany&quot;, `Product Category` == &quot;Clothing&quot;, `Customer Gender` == &quot;M&quot;) %&gt;% group_by(`Sub Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ungroup() ans_4 %&gt;% mutate_at(vars(Total), funs(scales::comma)) %&gt;% kable() Sub Category Total Jerseys 64,969 Vests 13,528 Gloves 11,511 Caps 9,776 Shorts 4,568 Socks 2,304 Show answer on chart: ggplot(ans_4, aes(x = reorder(`Sub Category`, -Total), y = Total, fill = `Sub Category`)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, show.legend = FALSE) + labs(x = &quot;Sub Category&quot;) + scale_y_log10(breaks = c(1, 10, 100, 1e3, 5e3, 15e3, 5e4), expand = c(0.02, 0.0), labels = scales::dollar) + theme_classic() + theme(axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;)) 8.5 Rank the sales from the highest to lowest for the clothing category. Keep the filter settings and add filter by youth age group ans_5 &lt;- my_data %&gt;% filter(Year == 2016, Country == &quot;Germany&quot;, `Product Category` == &quot;Clothing&quot;, `Customer Gender` == &quot;M&quot;, `Age Group` == &quot;Youth&quot;) %&gt;% group_by(`Sub Category`) %&gt;% summarise(Total = sum(Revenue)) %&gt;% arrange(desc(Total)) %&gt;% ungroup() ans_5 %&gt;% mutate_at(vars(Total), funs(scales::comma)) %&gt;% kable() Sub Category Total Jerseys 5,723 Gloves 3,208 Caps 1,119 Vests 536 Socks 219 Shorts 57 Show answer on chart: ggplot(ans_5, aes(x = reorder(`Sub Category`, -Total), y = Total, fill = `Sub Category`)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, show.legend = FALSE) + labs(x = &quot;Sub Category&quot;) + scale_y_log10(breaks = c(1, 10, 100, 1000, 5000), expand = c(0.02, 0.0), labels = scales::dollar) + theme_classic() + theme(axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;) ) "],
["join-data-from-different-sources.html", "Chapter 9 Join data from different sources 9.1 For those customers who bought bikes, what are the top three (bought the most quantity) customer profiles (marital status and number of children)? 9.2 For those customers who bought bikes, what are the top three (bought the most quantity) income brackets? (Rank from highest to Lowest) 9.3 For those customers who bought bikes, what are the top two (bought the most quantity) education levels? 9.4 What is the percentage of the customers who bought Bikes and are house owners?", " Chapter 9 Join data from different sources Scenario. Lastly, Lucy wants to have more information about the customer demographics in addition to the already available age and gender. Since your data has Customer ID for each row, you can “connect” these rows with your customer demographics database. Your customer demographics is stored in file “Customer_demographics.txt”. Load necessary libraries library(tidyverse) library(RColorBrewer) library(scales) Load data for Lab8: my_data &lt;- readRDS(&quot;./data/processing/data4week3.rds&quot;) glimpse(my_data) ## Observations: 113,036 ## Variables: 19 ## $ Date &lt;dttm&gt; 2013-11-26, 2015-11-26, 2014-03-23, 2016-0... ## $ Year &lt;dbl&gt; 2013, 2015, 2014, 2016, 2014, 2016, 2014, 2... ## $ Month &lt;dbl&gt; 11, 11, 3, 3, 5, 5, 5, 5, 2, 2, 7, 7, 7, 7,... ## $ `Customer ID` &lt;dbl&gt; 11019, 11019, 11039, 11039, 11046, 11046, 1... ## $ `Customer Age` &lt;dbl&gt; 19, 19, 49, 49, 47, 47, 47, 47, 35, 35, 32,... ## $ `Age Group` &lt;chr&gt; &quot;Youth&quot;, &quot;Youth&quot;, &quot;Adults&quot;, &quot;Adults&quot;, &quot;Adul... ## $ `Customer Gender` &lt;chr&gt; &quot;M&quot;, &quot;M&quot;, &quot;M&quot;, &quot;M&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;M&quot;... ## $ Country &lt;chr&gt; &quot;Canada&quot;, &quot;Canada&quot;, &quot;Australia&quot;, &quot;Australia... ## $ State &lt;chr&gt; &quot;British Columbia&quot;, &quot;British Columbia&quot;, &quot;Ne... ## $ `Product Category` &lt;chr&gt; &quot;Accessories&quot;, &quot;Accessories&quot;, &quot;Accessories&quot;... ## $ `Sub Category` &lt;chr&gt; &quot;Bike Racks&quot;, &quot;Bike Racks&quot;, &quot;Bike Racks&quot;, &quot;... ## $ Product &lt;chr&gt; &quot;Hitch Rack - 4-Bike&quot;, &quot;Hitch Rack - 4-Bike... ## $ `Frame Size` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,... ## $ `Order Quantity` &lt;dbl&gt; 8, 8, 23, 20, 4, 5, 4, 2, 22, 21, 8, 8, 7, ... ## $ `Unit Cost` &lt;dbl&gt; 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,... ## $ `Unit Price` &lt;dbl&gt; 120, 120, 120, 120, 120, 120, 120, 120, 120... ## $ Cost &lt;dbl&gt; 360, 360, 1035, 900, 180, 225, 180, 90, 990... ## $ Revenue &lt;dbl&gt; 950, 950, 2401, 2088, 418, 522, 379, 190, 2... ## $ Profit &lt;dbl&gt; 590, 590, 1366, 1188, 238, 297, 199, 100, 1... Customer demographics database: add_data &lt;- read.table(&quot;./data/raw/Customer_demographics.txt&quot;, sep = &quot;,&quot;, header = T) %&gt;% as_data_frame() glimpse(add_data) ## Observations: 18,484 ## Variables: 7 ## $ ID &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14... ## $ Customer.ID &lt;int&gt; 11000, 11001, 11002, 11003, 11004, 11005, 110... ## $ MaritalStatus &lt;fctr&gt; M, S, M, S, S, S, S, M, S, S, S, M, M, M, S,... ## $ YearlyIncome &lt;int&gt; 90000, 60000, 60000, 70000, 80000, 70000, 700... ## $ TotalChildren &lt;int&gt; 2, 3, 3, 0, 5, 0, 0, 3, 4, 0, 0, 4, 2, 2, 3, ... ## $ EnglishEducation &lt;fctr&gt; Bachelors, Bachelors, Bachelors, Bachelors, ... ## $ HouseOwnerFlag &lt;lgl&gt; TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, T... 9.1 For those customers who bought bikes, what are the top three (bought the most quantity) customer profiles (marital status and number of children)? ans_1 &lt;- my_data %&gt;% select(`Customer ID`, `Order Quantity`, `Product Category`) %&gt;% left_join(add_data %&gt;% select(Customer.ID, MaritalStatus, TotalChildren), c(&quot;Customer ID&quot; = &quot;Customer.ID&quot;)) %&gt;% filter(`Product Category` == &quot;Bikes&quot;) %&gt;% group_by(MaritalStatus, TotalChildren) %&gt;% summarise(`Total Order` = sum(`Order Quantity`)) %&gt;% arrange(desc(`Total Order`)) %&gt;% ungroup() kable(ans_1) MaritalStatus TotalChildren Total Order S 0 6733 M 1 5487 M 2 4029 S 2 3873 M 0 3845 S 1 2729 M 3 2375 M 4 2009 S 3 1802 S 4 1550 M 5 1145 S 5 834 ggplot(ans_1, aes(x = factor(TotalChildren), y = `Total Order`, fill = factor(MaritalStatus))) + geom_bar(stat = &quot;identity&quot;, position = position_dodge(0.55), width = 0.5) + scale_y_continuous(breaks = seq(0, 7e3, 1e3), expand = c(0.01, 0), limits = c(0, 7e3), oob = scales::squish) + labs(x = &quot;Total Children&quot;, fill = &quot;Marital\\nStatus&quot;) + theme(plot.title = element_text(face = &quot;bold&quot;, size = 14, hjust = 0.3), panel.background = element_rect(fill = &quot;white&quot;), legend.title = element_text(colour = &quot;black&quot;, size = 10, face = &quot;bold&quot;), legend.text = element_text(colour = &quot;black&quot;, size = 10, face = &quot;bold&quot;), legend.position = c(.95, .90), legend.background = element_rect(color = &quot;black&quot;), axis.line = element_line(colour = &quot;black&quot;), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Answer: 1. Single without child 2. Married with one child 3. Married with two children Now, replace the MaritalStatus and TotalChildren fields with the YearlyIncome field from the Customer_demographic table. 9.2 For those customers who bought bikes, what are the top three (bought the most quantity) income brackets? (Rank from highest to Lowest) ans_2 &lt;- my_data %&gt;% select(`Customer ID`, `Order Quantity`, `Product Category`) %&gt;% left_join(add_data %&gt;% select(Customer.ID, YearlyIncome), c(&quot;Customer ID&quot; = &quot;Customer.ID&quot;)) %&gt;% filter(`Product Category` == &quot;Bikes&quot;) %&gt;% group_by(YearlyIncome)%&gt;% summarise(`Total Quantity` = sum(`Order Quantity`)) %&gt;% arrange(desc(`Total Quantity`)) %&gt;% ungroup() kable(ans_2) YearlyIncome Total Quantity 40000 5573 60000 5288 70000 5125 30000 4992 20000 2817 80000 2333 90000 2037 10000 1861 130000 1439 110000 1310 50000 1038 100000 898 120000 819 170000 324 150000 305 160000 252 `Yearly Income` &lt;- reorder(ans_2$YearlyIncome, -ans_2$`Total Quantity`) ggplot(ans_2, aes(x = `Yearly Income`, y = `Total Quantity`)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, fill = &quot;tomato2&quot;) + scale_y_continuous(breaks = seq(0, 6e3, by = 1e3), expand = c(0.01, 0), limits = c(0, 6e3), oob = scales::squish) + scale_x_discrete(expand = c(0.01, 0), labels = paste0(&quot;$&quot;, prettyNum(`Yearly Income`, big.mark = &quot;&#39;&quot;))) + theme_classic() + theme(axis.text.x = element_text(angle = 65, vjust = 1.0, hjust = 1.0), axis.text = element_text(size = 11, colour = &quot;black&quot;), axis.title = element_text(size = 12, face = &quot;bold&quot;)) Answer: 1. $40000 2. $60000 3. $70`000 Now, remove the YearlyIncome field and replace it with the EnglishEducation field from the add_data tibble. 9.3 For those customers who bought bikes, what are the top two (bought the most quantity) education levels? ans_3 &lt;- my_data %&gt;% select(`Customer ID`, `Order Quantity`, `Product Category`) %&gt;% left_join(add_data %&gt;% select(Customer.ID, EnglishEducation), c(&quot;Customer ID&quot; = &quot;Customer.ID&quot;)) %&gt;% filter(`Product Category` == &quot;Bikes&quot;) %&gt;% group_by(EnglishEducation)%&gt;% summarise(`Total Quantity` = sum(`Order Quantity`)) %&gt;% arrange(desc(`Total Quantity`)) %&gt;% ungroup() kable(ans_3) EnglishEducation Total Quantity Bachelors 12201 Partial College 10389 Graduate Degree 6002 High School 5505 Partial High School 2314 ggplot(ans_3, aes(x = reorder(EnglishEducation, -`Total Quantity`), y = `Total Quantity`, fill = EnglishEducation)) + geom_bar(stat = &quot;identity&quot;, width = 0.5, show.legend = FALSE) + scale_y_continuous(breaks = seq(0, 15e4, by = 2e3), expand = c(0.01, 0)) + scale_fill_brewer(palette = &quot;Dark2&quot;) + theme_classic() + theme(axis.title.x = element_blank(), axis.text = element_text(size = 13, colour = &quot;black&quot;), axis.title = element_text(size = 14, face = &quot;bold&quot;)) Answer: 1. Bachelors 2. Partial College Lastly, remove the EnglishEducation field from the Rows and replace it with the HouseOwnerFlag field from the Customer_demographics table. Format the Sum of Order Quantity to show as Percentage of Grand Total with two decimal places. 9.4 What is the percentage of the customers who bought Bikes and are house owners? ans_4 &lt;- my_data %&gt;% select(`Customer ID`, `Order Quantity`, `Product Category`) %&gt;% left_join(add_data %&gt;% select(Customer.ID, HouseOwnerFlag), c(&quot;Customer ID&quot; = &quot;Customer.ID&quot;)) %&gt;% filter(`Product Category` == &quot;Bikes&quot;) %&gt;% group_by(HouseOwnerFlag) %&gt;% summarise(Total = sum(`Order Quantity`)) %&gt;% mutate(`Grand Total, %` = formatC(Total / sum(Total) * 100, digits = 2, format = &quot;f&quot;) %&gt;% as.numeric()) %&gt;% arrange(desc(`Grand Total, %`)) %&gt;% ungroup() kable(ans_4) HouseOwnerFlag Total Grand Total, % TRUE 25022 68.72 FALSE 11389 31.28 ggplot(ans_4, aes(x = &quot;&quot;, y = Total / sum(Total), fill = HouseOwnerFlag)) + geom_bar(width = 1, stat = &quot;identity&quot;, colour = &quot;white&quot;, size = 0.7) + coord_polar(theta = &quot;y&quot;) + labs(fill = &quot;House\\nOwner&quot;, x = NULL, y = NULL) + geom_text(aes(x = c(1.0, 1.1), y = c(0.35, 0.85), label = paste(`Grand Total, %`, &quot;%&quot;)), size = 8) + scale_fill_brewer(palette = &quot;Set2&quot;) + theme(panel.background = element_rect(fill = &quot;white&quot;, color = &quot;white&quot;), plot.title = element_text(face = &quot;bold&quot;, size = 16, hjust = 0.6), legend.title = element_text(face = &quot;bold&quot;, colour = &quot;black&quot;, size = 12), legend.text = element_text(size = 10, color = &quot;black&quot;), axis.text = element_blank(), axis.ticks = element_blank()) Answer: 68.72% "]
]
